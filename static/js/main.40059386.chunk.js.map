{"version":3,"sources":["swiper.js","App.js","index.web.js"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","sliderContainer","overflow","position","controlsWrapperStyle","alignItems","justifyContent","right","bottom","padding","dotsWrapperStyle","activeDotStyle","width","height","borderRadius","marginLeft","marginRight","marginTop","marginBottom","dotStyle","prevButtonStyle","color","nextButtonStyle","Swiper","state","activeIndex","pan","Animated","ValueXY","_this2","this","_animatedValueX","_animatedValueY","x","addListener","value","y","setState","props","index","_panResponder","PanResponder","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","e","gestureState","_fixState","onPanResponderMove","event","direction","dx","dy","onPanResponderRelease","gesture","correction","moveX","x0","moveY","y0","Math","abs","actionMinWidth","spring","toValue","start","_changeIndex","removeAllListeners","down","arguments","length","undefined","setOffset","setValue","decrement","move","count","_this3","_event$nativeEvent$la","nativeEvent","layout","_this4","_this$state","_this$props","containerStyle","swipeAreaStyle","swipeWrapperStyle","dotElement","activeDotElement","prevButtonElement","prevButtonText","nextButtonElement","nextButtonText","children","Array","isArray","react_default","a","createElement","View","style","onLayout","_onLayout","bind","Object","assign","top","left","flexDirection","transform","translateX","translateY","panHandlers","map","el","i","key","TouchableOpacity","disabled","opacity","onPress","moveUpDown","Text","React","Component","defaultProps","HomeScreen","swiper_Swiper","AppRegistry","registerComponent","App","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.40059386.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    View,\n    Text,\n    Animated,\n    PanResponder,\n    TouchableOpacity,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n    },\n    sliderContainer: {\n        backgroundColor: \"transparent\",\n        overflow: \"hidden\",\n        position: \"relative\",\n    },\n    controlsWrapperStyle: {\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        right: 0,\n        bottom: 0,\n        padding: 10\n    },\n    dotsWrapperStyle: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    activeDotStyle: {\n        backgroundColor: '#007aff',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    dotStyle: {\n        backgroundColor: 'rgba(0,0,0,.2)',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    prevButtonStyle: {\n        color: '#777777'\n    },\n    nextButtonStyle: {\n        color: '#007aff'\n    },\n});\n\nexport default class Swiper extends React.Component {\n    state = {\n        width: 0,\n        height: 0,\n        activeIndex: 0,\n        pan: new Animated.ValueXY(),\n    };\n\n    componentWillMount() {\n        this._animatedValueX = 0;\n        this._animatedValueY = 0;\n        this.state.pan.x.addListener((value) => this._animatedValueX = value.value);\n        this.state.pan.y.addListener((value) => this._animatedValueY = value.value);\n\n        this.setState({activeIndex: this.props.index});\n\n        this._panResponder = PanResponder.create({\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: () => true,\n            onPanResponderGrant: (e, gestureState) => this._fixState(),\n            onPanResponderMove: Animated.event([\n                null, this.props.direction === \"row\" ? {dx: this.state.pan.x} : {dy: this.state.pan.y},\n            ]),\n            onPanResponderRelease: (e, gesture) => {\n                const correction = this.props.direction===\"row\" ? gesture.moveX-gesture.x0 : gesture.moveY-gesture.y0;\n                if(Math.abs(correction) < ((this.props.direction===\"row\" ? this.state.width : this.state.height) * this.props.actionMinWidth))\n                    return Animated.spring(this.state.pan,{toValue:{x:0,y:0}}).start();\n                this._changeIndex(correction>0);\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.state.pan.x.removeAllListeners();\n        this.state.pan.y.removeAllListeners();\n    }\n\n    moveUpDown(down=false) {\n        this._fixState();\n        this._changeIndex(down);\n    }\n\n    _fixState() {\n        this._animatedValueX = this.props.direction===\"row\" ? this.state.width*this.state.activeIndex*-1 : 0;\n        this._animatedValueY = this.props.direction===\"row\" ? 0 : this.state.height*this.state.activeIndex*-1;\n        this.state.pan.setOffset({x: this._animatedValueX, y: this._animatedValueY});\n        this.state.pan.setValue({x: 0, y: 0});\n    }\n\n    _changeIndex(decrement=false) {\n        let move = {x:0,y:0};\n        if((this.state.activeIndex<=0 && decrement) || (!decrement && this.state.activeIndex+1>=this.count))\n            return Animated.spring(this.state.pan,{toValue:{x:0,y:0}}).start();\n        let index = !decrement ? this.state.activeIndex+1 : this.state.activeIndex-1;\n        this.setState({activeIndex: index});\n        if(this.props.direction===\"row\")\n            move.x = decrement ? this.state.width : this.state.width*-1;\n        else\n            move.y = decrement ? this.state.height : this.state.height*-1;\n        Animated.spring(this.state.pan,{toValue:move}).start();\n    }\n\n    _onLayout(event) {\n        const {width,height} = event.nativeEvent.layout;\n        this.setState({width,height}, () => this._fixState());\n    }\n\n    render() {\n        const {pan,width,height,activeIndex} = this.state;\n        const {\n            direction,\n            containerStyle,\n            swipeAreaStyle,\n            swipeWrapperStyle,\n            controlsWrapperStyle,\n            dotsWrapperStyle,\n            dotElement,\n            dotStyle,\n            activeDotElement,\n            activeDotStyle,\n            prevButtonElement,\n            prevButtonStyle,\n            prevButtonText,\n            nextButtonElement,\n            nextButtonStyle,\n            nextButtonText,\n        } = this.props;\n        let {children} = this.props;\n        if(!Array.isArray(children)) children = [children];\n        this.count = children.length;\n        return (\n            <View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}>\n                <View style={[styles.sliderContainer,swipeAreaStyle,{width,height}]}>\n                    <Animated.View\n                        style={[{\n                            position: \"relative\",\n                            top: 0,\n                            left: 0,\n                        },swipeWrapperStyle,{\n                            flexDirection: direction,\n                            width: direction===\"row\" ? width*this.count : width,\n                            height: direction===\"row\" ? height : height*this.count,\n                        },{transform:[{translateX:pan.x},{translateY:pan.y}]}]}\n                        {...this._panResponder.panHandlers}\n                    >\n                        {children.map((el,i)=>(<View key={i} style={{width,height}}>{el}</View>))}\n                    </Animated.View>\n                    <View style={[styles.controlsWrapperStyle,{\n                        flexDirection: direction,\n                    }, direction===\"row\" ? {left: 0} : {top: 0}, controlsWrapperStyle]}>\n                        <TouchableOpacity disabled={!activeIndex} style={{opacity:!activeIndex ? 0 : 1}} onPress={()=>this.moveUpDown(true)}>\n                            {prevButtonElement || <Text style={[styles.prevButtonStyle,prevButtonStyle]}>{prevButtonText}</Text>}\n                        </TouchableOpacity>\n                        <View style={[{flexDirection:direction},styles.dotsWrapperStyle,dotsWrapperStyle]}>\n                            {children.map((el,i)=>(\n                                <View key={i}>\n                                    {i===activeIndex\n                                        ? activeDotElement || <View style={[styles.activeDotStyle,activeDotStyle]} />\n                                        : dotElement || <View style={[styles.dotStyle,dotStyle]} />}\n                                </View>\n                            ))}\n                        </View>\n                        <TouchableOpacity disabled={activeIndex+1>=this.count} style={{opacity:activeIndex+1>=this.count ? 0 : 1}} onPress={()=>this.moveUpDown()}>\n                            {nextButtonElement || <Text style={[styles.nextButtonStyle,nextButtonStyle]}>{nextButtonText}</Text>}\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </View>\n        );\n    }\n}\n\nSwiper.propTypes = {\n    direction: PropTypes.oneOf([\"row\",\"column\"]),\n    index: PropTypes.number,\n    actionMinWidth: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    containerStyle: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    swipeAreaStyle: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    swipeWrapperStyle: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    controlsWrapperStyle: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    dotsWrapperStyle: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    dotStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    dotElement: PropTypes.element,\n    activeDotStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    activeDotElement: PropTypes.element,\n    prevButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    prevButtonElement: PropTypes.element,\n    prevButtonText: PropTypes.string,\n    nextButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    nextButtonElement: PropTypes.element,\n    nextButtonText: PropTypes.string,\n};\n\nSwiper.defaultProps = {\n    direction: \"row\",\n    index: 0,\n    actionMinWidth: 0.5,\n    prevButtonText: \"prev\",\n    nextButtonText: \"next\",\n};","import React from \"react\";\nimport {View,Text} from \"react-native\";\nimport Swiper from \"./swiper\";\n\nexport default class HomeScreen extends React.Component {\n    render() {\n        return (\n            <View style={{flex:1}}>\n                <View style={{flex:1}}>\n                    <Swiper index={1}>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(20,20,200,0.3)\"}}>\n                            <Text>Slider 1</Text>\n                        </View>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(20,200,20,0.3)\"}}>\n                            <Text>Slider 2</Text>\n                        </View>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(200,20,20,0.3)\"}}>\n                            <Text>Slider 3</Text>\n                        </View>\n                    </Swiper>\n                </View>\n                <View style={{flex:1}}>\n                    <Swiper direction={\"column\"}>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(20,20,200,0.3)\"}}>\n                            <Text>Slider 1</Text>\n                        </View>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(20,200,20,0.3)\"}}>\n                            <Text>Slider 2</Text>\n                        </View>\n                        <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(200,20,20,0.3)\"}}>\n                            <Text>Slider 3</Text>\n                        </View>\n                    </Swiper>\n                </View>\n            </View>\n        )\n    }\n}","import { AppRegistry } from \"react-native\";\nimport App from \"./App\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n    rootTag: document.getElementById(\"root\")\n});"],"sourceRoot":""}